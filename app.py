# -*- coding: utf-8 -*-
import streamlit as st
import pandas as pd
import random
import os
from PIL import Image
import re

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Sistema Completo de Res√≠duos",
    page_icon="‚ôªÔ∏è",
    layout="wide"
)

# Caminhos e diret√≥rios
IMAGES_DIR = "imagens_materiais"

# Dicion√°rio completo de pol√≠meros
POLIMEROS_DATA = {
    'PET': {
        'Nome Completo': 'Politereftalato de Etileno',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,36-1,38 g/cm¬≥',
        'Ponto de Fus√£o': '250-260¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 1)',
        'Aplica√ß√µes': 'Garrafas, fibras t√™xteis, embalagens',
        'Descri√ß√£o': 'Um dos pl√°sticos mais reciclados mundialmente, derivado do petr√≥leo'
    },
    'PE': {
        'Nome Completo': 'Polietileno',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '0,91-0,96 g/cm¬≥',
        'Ponto de Fus√£o': '105-130¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 2)',
        'Aplica√ß√µes': 'Sacolas, embalagens, tubos',
        'Descri√ß√£o': 'Pl√°stico mais comum, com vers√µes de alta e baixa densidade'
    },
    'PP': {
        'Nome Completo': 'Polipropileno',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '0,90-0,91 g/cm¬≥',
        'Ponto de Fus√£o': '160-170¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 5)',
        'Aplica√ß√µes': 'Utens√≠lios dom√©sticos, embalagens',
        'Descri√ß√£o': 'Vers√°til e resistente a produtos qu√≠micos'
    },
    'PVC': {
        'Nome Completo': 'Policloreto de Vinila',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '1,38 g/cm¬≥',
        'Ponto de Fus√£o': '100-260¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 3)',
        'Aplica√ß√µes': 'Tubos, revestimentos, cabos',
        'Descri√ß√£o': 'Cont√©m cloro em sua composi√ß√£o, requer cuidados na reciclagem'
    },
    'PS': {
        'Nome Completo': 'Poliestireno',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '1,04-1,07 g/cm¬≥',
        'Ponto de Fus√£o': '240¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 6)',
        'Aplica√ß√µes': 'Embalagens, isolantes t√©rmicos',
        'Descri√ß√£o': 'Conhecido como isopor quando expandido (EPS)'
    },
    'PLA': {
        'Nome Completo': '√Åcido Polil√°tico',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,24-1,27 g/cm¬≥',
        'Ponto de Fus√£o': '150-160¬∞C',
        'Recicl√°vel': 'Sim (compost√°vel)',
        'Aplica√ß√µes': 'Impress√£o 3D, embalagens',
        'Descri√ß√£o': 'Biopol√≠mero derivado de fontes renov√°veis como milho e cana'
    },
    'PA': {
        'Nome Completo': 'Poliamida',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,13-1,15 g/cm¬≥',
        'Ponto de Fus√£o': '220-265¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'T√™xteis, pe√ßas industriais',
        'Descri√ß√£o': 'Conhecido como Nylon, possui alta resist√™ncia mec√¢nica'
    },
    'ABS': {
        'Nome Completo': 'Acrilonitrila Butadieno Estireno',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '1,04-1,06 g/cm¬≥',
        'Ponto de Fus√£o': '105¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Brinquedos, pe√ßas automotivas',
        'Descri√ß√£o': 'Terpol√≠mero resistente ao impacto'
    },
    'PTFE': {
        'Nome Completo': 'Politetrafluoretileno',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '2,15-2,20 g/cm¬≥',
        'Ponto de Fus√£o': '327¬∞C',
        'Recicl√°vel': 'N√£o',
        'Aplica√ß√µes': 'Revestimentos antiaderentes',
        'Descri√ß√£o': 'Conhecido como Teflon, possui alta resist√™ncia qu√≠mica'
    },
    'PUR': {
        'Nome Completo': 'Poliuretano',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,05 g/cm¬≥',
        'Ponto de Fus√£o': 'Varia',
        'Recicl√°vel': 'N√£o',
        'Aplica√ß√µes': 'Espumas, colch√µes, fibras',
        'Descri√ß√£o': 'Vers√°til, usado de mobili√°rio a roupas'
    },
    'PC': {
        'Nome Completo': 'Policarbonato',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,20-1,22 g/cm¬≥',
        'Ponto de Fus√£o': '230-260¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Lentes, CDs, capacetes',
        'Descri√ß√£o': 'Transparente e resistente ao impacto'
    },
    'PMMA': {
        'Nome Completo': 'Polimetilmetacrilato',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '1,17-1,20 g/cm¬≥',
        'Ponto de Fus√£o': '160¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Displays, pr√≥teses',
        'Descri√ß√£o': 'Conhecido como acr√≠lico ou vidro acr√≠lico'
    },
    'POM': {
        'Nome Completo': 'Poliacetal',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,41-1,43 g/cm¬≥',
        'Ponto de Fus√£o': '175¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Engrenagens, componentes',
        'Descri√ß√£o': 'Alta rigidez e baixo atrito'
    },
    'EVA': {
        'Nome Completo': 'Etileno Acetato de Vinila',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '0,93 g/cm¬≥',
        'Ponto de Fus√£o': 'Varia',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Solas de sapato, brinquedos',
        'Descri√ß√£o': 'Copol√≠mero flex√≠vel e leve'
    },
    'PBT': {
        'Nome Completo': 'Polibutileno Tereftalato',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,31 g/cm¬≥',
        'Ponto de Fus√£o': '223¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Conectores el√©tricos',
        'Descri√ß√£o': 'Poli√©ster termopl√°stico resistente'
    },
    'SAN': {
        'Nome Completo': 'Estireno Acrilonitrila',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '1,07-1,08 g/cm¬≥',
        'Ponto de Fus√£o': '115-120¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Eletrodom√©sticos',
        'Descri√ß√£o': 'Copol√≠mero transparente'
    },
    'PPS': {
        'Nome Completo': 'Polifenileno Sulfeto',
        'Tipo de Polimeriza√ß√£o': 'Policondensa√ß√£o',
        'Densidade': '1,35 g/cm¬≥',
        'Ponto de Fus√£o': '280-285¬∞C',
        'Recicl√°vel': 'Sim',
        'Aplica√ß√µes': 'Pe√ßas eletr√¥nicas',
        'Descri√ß√£o': 'Alta resist√™ncia t√©rmica'
    },
    'LDPE': {
        'Nome Completo': 'Polietileno de Baixa Densidade',
        'Tipo de Polimeriza√ß√£o': 'Adi√ß√£o',
        'Densidade': '0,91-0,93 g/cm¬≥',
        'Ponto de Fus√£o': '105-115¬∞C',
        'Recicl√°vel': 'Sim (c√≥digo 4)',
        'Aplica√ß√µes': 'Filmes pl√°sticos',
        'Descri√ß√£o': 'Vers√£o flex√≠vel do PE'
    }
}
    
  # Mapeamento de siglas para nomes de arquivos de imagem
MAPA_IMAGENS = {
    'PET': 'pet.png',
    'PE': 'pe.png',
    'PP': 'pp.png',
    'PVC': 'pvc.png',
    'PS': 'ps.png',
    'ABS': 'abs.png',
    'PLA': 'pla.png',
    'PA': 'pa.png',
    'PTFE': 'ptfe.png',
    'PUR': 'pur.png',
    'PC': 'pc.png',
    'PMMA': 'pmma.png',
    'POM': 'pom.png',
    'EVA': 'eva.png',
    'PBT': 'pbt.png',
    'SAN': 'san.png',
    'PPS': 'pps.png',
    'LDPE': 'ldpe.png'
}

# Carregar dados (pol√≠meros e res√≠duos)
@st.cache_data
def load_data():
    polimeros = pd.read_csv("polimeros.csv", sep=";")
    residuos = pd.read_csv("residuos.csv", sep=";")
    return polimeros, residuos


@st.cache_data
def load_quiz():
    try:
        df = pd.read_csv("quiz_perguntas.csv", sep=";")
        questions = []
        for _, row in df.iterrows():
            questions.append({
                "pergunta": row['pergunta'],
                "opcoes": [str(row[f'opcao_{i}']) for i in range(1,5)],
                "resposta": int(row['resposta']),
                "explicacao": row['explicacao']
            })
        random.shuffle(questions)
        return questions
    except FileNotFoundError:
        st.error("Arquivo de quiz n√£o encontrado!")
        return []

def mostrar_glossario():
    st.header("üìñ Gloss√°rio Interativo de Pol√≠meros")
    
    # Filtros na sidebar
    with st.sidebar:
        st.subheader("Filtros")
        tipo_filtro = st.selectbox(
            "Tipo de Polimeriza√ß√£o",
            ["Todos"] + list(sorted({v['Tipo de Polimeriza√ß√£o'] for v in POLIMEROS_DATA.values()}))
        )  # Faltava este par√™ntese
        
        reciclavel_filtro = st.selectbox(
            "Recicl√°vel",
            ["Todos", "Sim", "N√£o"]
        )
        
        busca = st.text_input("Buscar por nome ou sigla:")

    # Aplicar filtros
    polimeros_filtrados = {}
    for sigla, dados in POLIMEROS_DATA.items():
        if tipo_filtro != "Todos" and dados['Tipo de Polimeriza√ß√£o'] != tipo_filtro:
            continue
        if reciclavel_filtro != "Todos" and not dados['Recicl√°vel'].startswith(reciclavel_filtro):
            continue
        if busca and busca.lower() not in sigla.lower() and busca.lower() not in dados['Nome Completo'].lower():
            continue
        polimeros_filtrados[sigla] = dados

    # Exibi√ß√£o
    for sigla, dados in polimeros_filtrados.items():
        with st.expander(f"{sigla} - {dados['Nome Completo']}", expanded=False):
            col1, col2 = st.columns([1, 3])
            
            with col1:
                img_path = os.path.join(IMAGES_DIR, MAPA_IMAGENS.get(sigla, f"{sigla.lower()}.png"))
                if os.path.exists(img_path):
                    st.image(Image.open(img_path), caption=sigla, use_column_width=True)
                else:
                    st.image(
                        Image.new('RGB', (300, 200), color=(240, 240, 240)),
                        caption=f"Imagem ilustrativa - {sigla}",
                        use_column_width=True
                    )
            
            with col2:
                st.markdown(f"""
                **üß™ Tipo de Polimeriza√ß√£o:** {dados['Tipo de Polimeriza√ß√£o']}  
                **‚öñ Densidade:** {dados['Densidade']}  
                **üî• Ponto de Fus√£o:** {dados['Ponto de Fus√£o']}  
                **‚ôª Recicl√°vel:** {dados['Recicl√°vel']}
                """)
                
                with st.expander("üîç Detalhes"):
                    st.markdown(f"**Aplica√ß√µes:** {dados['Aplica√ß√µes']}")
                    st.markdown(f"**Descri√ß√£o:** {dados['Descri√ß√£o']}")
    
    st.markdown(f"*Mostrando {len(polimeros_filtrados)} de {len(POLIMEROS_DATA)} pol√≠meros*")

# Fun√ß√£o: quiz interativo
def mostrar_quiz():
    st.header("üßê Quiz de Res√≠duos e Pol√≠meros")

    # Inicializa o estado do quiz
    if 'questions' not in st.session_state:
        st.session_state.questions = load_quiz()
        st.session_state.current_question = 0
        st.session_state.score = 0

    questions = st.session_state.questions
    q_num = st.session_state.current_question

    # Se terminou o quiz
    if q_num >= len(questions):
        score = st.session_state.score
        total = len(questions)
        percentual = score / total
        st.balloons()
        st.success(f"üéØ Pontua√ß√£o Final: {score}/{total}")

        if percentual == 1:
            st.info("üåü Excelente! Voc√™ acertou tudo!")
        elif percentual >= 0.75:
            st.info("üëè Muito bom! Voc√™ tem um bom dom√≠nio do conte√∫do.")
        elif percentual >= 0.5:
            st.warning("üîç Razo√°vel, mas vale revisar os materiais.")
        else:
            st.error("üìö Vamos estudar mais um pouco? Explore o gloss√°rio!")

        if st.button("üîÑ Refazer Quiz"):
            for key in list(st.session_state.keys()):
                if key.startswith("q") or key.startswith("b") or key.startswith("respondido") or key.startswith("correta"):
                    del st.session_state[key]
            del st.session_state.questions
            del st.session_state.current_question
            del st.session_state.score
        return

    # Exibe a pergunta atual
    question = questions[q_num]
    st.progress((q_num + 1) / len(questions))
    st.subheader(f"Pergunta {q_num + 1} de {len(questions)}")
    st.markdown(f"**{question['pergunta']}**")

    # Widget de escolha
    selected = st.radio("Escolha uma alternativa:", question['opcoes'], key=f"q{q_num}")

    # Bot√£o de confirmar
    if f"respondido_{q_num}" not in st.session_state:
        if st.button("‚úÖ Confirmar", key=f"b{q_num}"):
            st.session_state[f"respondido_{q_num}"] = True
            correta = selected == question['opcoes'][question['resposta']]
            st.session_state[f"correta_{q_num}"] = correta
            if correta:
                st.session_state.score += 1

    # Mostra resultado e bot√£o pr√≥xima
    if st.session_state.get(f"respondido_{q_num}", False):
        correta = st.session_state[f"correta_{q_num}"]
        if correta:
            st.success(f"‚úÖ Correto! {question['explicacao']}")
        else:
            st.error(f"‚ùå Errado. {question['explicacao']}")

        if st.button("‚û°Ô∏è Pr√≥xima pergunta"):
            st.session_state.current_question += 1


# Fun√ß√£o: hist√≥ria do Museu
def mostrar_historia():
    st.header("üèõÔ∏è Museu do Lixo ‚Äì Hist√≥ria e Agenda")

    st.markdown("""
O **Museu do Lixo**, instalado pela Comcap em **25 de setembro de 2003**, tornou-se uma refer√™ncia em **educa√ß√£o ambiental** em Santa Catarina. Sua abordagem l√∫dica e acess√≠vel refor√ßa conceitos de **consumo consciente** com base nos quatro √©rres (4Rs): **Repensar, Reduzir, Reutilizar e Reciclar**.

O museu nasceu do sonho de mais de dez anos de trabalhadores da Comcap, que desejavam **resgatar objetos descartados** para criar um espa√ßo de mem√≥ria sobre os h√°bitos de consumo da sociedade.

As primeiras pe√ßas foram reunidas no antigo galp√£o de triagem da coleta seletiva. Atualmente, o acervo est√° disposto em **ambientes tem√°ticos**, montados e decorados com **materiais reaproveitados** ‚Äî desde as tintas das paredes at√© a mandala do piso, tudo feito com res√≠duos reciclados.

---

### üïì Hor√°rio de Funcionamento  
üìÖ Segunda a sexta-feira  
üïó Das 8h √†s 17h

**Visitas monitoradas devem ser agendadas:**  
üìû (48) 3261-4808  
üìß ambiental.comcap@pmf.sc.gov.br

---

### üìç Localiza√ß√£o  
Rodovia Admar Gonzaga, 72 ‚Äì Bairro Itacorubi, Florian√≥polis ‚Äì SC
""")

    st.markdown("""
### üîç Saiba mais

- O museu integra o roteiro de **visita√ß√£o monitorada ao Centro de Valoriza√ß√£o de Res√≠duos (CVR)** da Comcap, empresa de economia mista da Prefeitura de Florian√≥polis.  
- Recebe cerca de **7 mil visitantes por ano**, mediante agendamento pr√©vio.  
- O acervo conta com aproximadamente **10 mil itens** recuperados na coleta ou por **entrega volunt√°ria**, ainda em processo de cataloga√ß√£o.  
- A instala√ß√£o ocupa uma √°rea de **200 m¬≤**.  
- Cole√ß√µes em destaque: ferros de passar roupa, latas de refrigerante e de cerveja, m√°quinas fotogr√°ficas e de costura, aparelhos de telefone e computadores.  
- Os ambientes s√£o decorados com **materiais reutilizados**, desde tintas at√© pisos.  
- Foram criados personagens para as atividades educativas, como **Neiciclagem** (Valdinei Marques), **Dona Tainha** (Joseane Rosa), **Vento Sul** e **Reciclardo** (Ricardo Concei√ß√£o).

---
""")
#fun√ß√£o qu√≠mica 
def mostrar_quimica():
    st.header("üß™ Qu√≠mica dos Pol√≠meros e Reciclagem")

    st.markdown("""
    Os **pol√≠meros** s√£o macromol√©culas formadas por unidades repetitivas chamadas mon√¥meros. Eles podem ser naturais, como a celulose, ou sint√©ticos, como:
    - Polietileno (PE)
    - Polipropileno (PP)
    - Poli(tereftalato de etileno) (PET)
    - Poli(cloreto de vinila) (PVC)
    - Poliestireno (PS)

    Os **termopl√°sticos**, como PE, PP, PET, PVC e PS, possuem as seguintes caracter√≠sticas:
    - Mold√°veis a quente
    - Baixa densidade
    - Boa apar√™ncia
    - Isolantes t√©rmico e el√©trico
    - Resistentes ao impacto
    - Baixo custo

    No Brasil, o consumo de termopl√°sticos tem crescido significativamente. Por exemplo, o PET apresentou um aumento de mais de **2.200%** na √∫ltima d√©cada.

    A **separa√ß√£o automatizada** de pol√≠meros √© realizada com base na diferen√ßa de densidade, utilizando tanques de flota√ß√£o ou hidrociclones para:
    - PE
    - PP
    - PS
    - PVC
    - PET

    A **reciclagem** desses materiais envolve tecnologias mec√¢nicas e qu√≠micas, al√©m da recupera√ß√£o de energia a partir de res√≠duos pl√°sticos.

    Empresas recicladoras de PE e PP processam entre 20 e 50 toneladas por m√™s, com poucas ultrapassando 100 toneladas mensais. As principais aplica√ß√µes dos pol√≠meros reciclados s√£o em utilidades dom√©sticas.
    """)

# Fun√ß√£o: compostagem
def mostrar_compostagem():
    st.header("üå± Compostagem com Res√≠duos Org√¢nicos")

    st.markdown("""
A **compostagem artesanal**, por meio da reciclagem de res√≠duos org√¢nicos, traz de volta √† cidade a beleza e o equil√≠brio das paisagens naturais. Al√©m disso, a separa√ß√£o correta dos res√≠duos facilita a destina√ß√£o dos recicl√°veis secos para a coleta seletiva.
""")

    st.subheader("‚úÖ O que pode ir para a compostagem:")
    st.markdown("""
- Frutas, legumes e verduras  
- Cascas de ovos  
- Borra de caf√© com filtro  
- Folhas secas e grama  
- Serragem e palha  
- Restos de poda triturados
""")

    st.subheader("‚ùå O que N√ÉO pode ir para a compostagem:")
    st.markdown("""
- Carnes, latic√≠nios e peixes  
- Excrementos de animais dom√©sticos  
- √ìleos, gorduras e produtos qu√≠micos  
- Itens sanit√°rios ou pl√°sticos
""")

    st.subheader("üß™ Como funciona a compostagem")
    st.markdown("""
A compostagem cria um ambiente prop√≠cio √† a√ß√£o de **bact√©rias e fungos** que decomp√µem a mat√©ria org√¢nica. Tamb√©m participam do processo **minhocas, insetos e embu√°s**, transformando os res√≠duos em um **composto org√¢nico**, uma terra escura, f√©rtil e rica em nutrientes.

Esse composto pode ser usado em hortas, vasos, jardins e √°reas p√∫blicas, ajudando a regenerar o solo e fechar o ciclo dos alimentos.
""")

    st.subheader("üìä Dados de Florian√≥polis")
    st.markdown("""
- **35%** dos res√≠duos domiciliares s√£o org√¢nicos  
  - 24%: restos de alimentos  
  - 11%: res√≠duos verdes (podas, folhas, jardinagem)  
- **43%** s√£o recicl√°veis secos  
- **22%** s√£o rejeitos (lixo n√£o recicl√°vel)

Das **193 mil toneladas** coletadas anualmente, **70 mil toneladas** s√£o res√≠duos org√¢nicos. Separando-os na fonte, evitar√≠amos o envio de **27 caminh√µes de lixo por dia** ao aterro de Bigua√ßu.
""")

    st.subheader("üí∞ Economia e benef√≠cios")
    st.markdown("""
Cada tonelada aterrada custa **R$ 156,81** ao munic√≠pio.  
Com compostagem, Florian√≥polis poderia economizar at√© **R$ 11 milh√µes por ano**, al√©m de reduzir impactos ambientais e melhorar a qualidade do solo urbano.
""")

    st.subheader("üìö Materiais e links √∫teis")
    st.markdown("""
- [\U0001F4D8 **Manual de Compostagem com Minhocas: Projeto Minhoca na Cabe√ßa**](https://cepagroagroecologia.wordpress.com/minhoca-na-cabeca/)  
- [\U0001F3A5 **V√≠deo sobre valoriza√ß√£o dos org√¢nicos em Florian√≥polis**](https://www.youtube.com/watch?v=xyz)  
- [\U0001F4D7 **Manual de Compostagem: MMA, Cepagro, SESC-SC**](https://www.mma.gov.br)  
- [\U0001F4D2 **Livreto: Compostagem Comunit√°ria ‚Äì Guia Completo**](https://compostagemcomunitaria.com.br)
""")

# Fun√ß√£o principal
def main():
    st.header("Museu do Lixo - COMCAP Florian√≥polis ‚ôªÔ∏è")
    st.subheader("Aplicativo para educadores: Qu√≠mica dos res√≠duos")
    st.markdown("*Desenvolvido durante a disciplina de Pr√°tica de Ensino em Espa√ßos de Divulga√ß√£o Cient√≠fica (Ext 18h)*")
    
    # Divis√≥ria superior
    st.markdown("---")
    st.markdown("---")

    tab1, tab2, tab3, tab4, tab5, tab6, tab7 = st.tabs([
        "üèõÔ∏è Hist√≥ria do Museu",
        "üè∑Ô∏è Gloss√°rio",
        "üßê Quiz",
        "üìö Atividades",
        "üå± Compostagem",
        "üß™ Qu√≠mica",
        "‚ÑπÔ∏è Sobre"
    ])

    with tab1:
        mostrar_historia()
    with tab2:
        mostrar_glossario()
    with tab3:
        mostrar_quiz()
    with tab4:
        mostrar_compostagem()
    with tab5:
        mostrar_quimica()
    with tab6:
        st.header("Sobre o Projeto")
        st.markdown("""
**Gloss√°rio Interativo de Res√≠duos e Pol√≠meros**  
- Desenvolvido para educa√ß√£o ambiental  
- Dados t√©cnicos baseados em normas ABNT  
- Integrado com atividades pedag√≥gicas  
""")
        st.markdown("""
**Autor:** nome alunos e prof  
**Disciplina:** Pr√°tica de Ensino em Espa√ßos de Divulga√ß√£o Cient√≠fica (Ext 18h-a)  
**Institui√ß√£o:** Universidade Federal de Santa Catarina (UFSC)
""")

if __name__ == "__main__":
    if not os.path.exists(IMAGES_DIR):
        os.makedirs(IMAGES_DIR)
    main()
