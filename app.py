import streamlit as st
import pandas as pd
from io import StringIO

# Fun√ß√£o para carregar os dados com tratamento de erros
@st.cache_data  # Cache para melhor desempenho
def carregar_dados():
    # Dados CSV como string (substitua pelo seu arquivo ou URL)
    dados_csv = """Categoria,Sigla ou Nome,Composi√ß√£o Qu√≠mica,Classe ABNT,Recicl√°vel,Destina√ß√£o,Aplica√ß√µes ou Exemplos
Pl√°stico,PEAD (Polietileno de Alta Densidade),Pol√≠mero de etileno,Classe II-B,Sim,Reciclagem mec√¢nica,"Sacolas, frascos r√≠gidos"
Pl√°stico,PET (Polietileno Tereftalato),Poli√©ster,Classe II-B,Sim,"Reciclagem qu√≠mica ou mec√¢nica","Garrafas, embalagens de alimentos"
Pl√°stico,PVC (Policloreto de Vinila),Pol√≠mero vin√≠lico com cloro,Classe II-B,Limitado,Reciclagem especializada,"Tubos, brinquedos"
Metal,Alum√≠nio,Al,Classe II-B,Sim,"Fus√£o e reutiliza√ß√£o","Latinhas, embalagens, esquadrias"
Metal,Ferro,Fe,Classe II-B,Sim,Reciclagem sider√∫rgica,"Arames, pe√ßas de m√°quinas"
Vidro,Comum (s√≠lica + carbonato de s√≥dio),"SiO‚ÇÇ + Na‚ÇÇCO‚ÇÉ",Classe II-B,Sim,"Reciclagem infinita","Garfos, garrafas, potes"
Papel,"Papel√£o e papel branco",Base celul√≥sica,Classe II-B,Sim,Reciclagem mec√¢nica,"Caixas, folhas, embalagens"
Org√¢nico,Res√≠duo de alimentos,Compostos org√¢nicos,Classe II-A,N√£o,Compostagem,"Restos de frutas, cascas, vegetais"
Org√¢nico,Res√≠duo de poda,"Celulose, lignina",Classe II-A,N√£o,Compostagem,"Podas, grama, folhas secas"
Hospitalar,"Agulhas, seringas, sangue","Metais pesados e org√¢nicos",Classe I,N√£o,"Incinerador licenciado","Res√≠duos de postos de sa√∫de, hospitais"
Eletr√¥nico,Baterias de L√≠tio,"Li, Classe I",Classe I,N√£o,"Reciclagem especial/Ponto de coleta","Smartphones, notebooks"
Eletr√¥nico,Placas de circuito impresso,"Metais pesados + pol√≠meros",Classe I,N√£o,"Recupera√ß√£o especializada","Computadores, eletrodom√©sticos"
Perigoso,√ìleo usado,"Compostos org√¢nicos polares",Classe I,N√£o,"Coleta e regenera√ß√£o ou coprocessamento","√ìleo de motor, √≥leo de fritura"
Perigoso,Solventes industriais,"Compostos org√¢nicos vol√°teis",Classe I,N√£o,"Coprocessamento em fornos","Thinner, acetona"
"""
    
    try:
        # Para arquivo local (descomente se for usar arquivo)
        # df = pd.read_csv("residuos.csv", encoding='utf-8', quotechar='"', engine='python')
        
        # Para GitHub (descomente e substitua a URL)
        # url = "https://raw.githubusercontent.com/SEU_USUARIO/SEU_REPOSITORIO/main/residuos.csv"
        # df = pd.read_csv(url, encoding='utf-8', quotechar='"', engine='python')
        
        # Usando os dados diretamente (para teste)
        df = pd.read_csv(StringIO(dados_csv), encoding='utf-8', quotechar='"', engine='python')
        
        return df
    except Exception as e:
        st.error(f"Erro ao carregar dados: {str(e)}")
        return pd.DataFrame()

# Carrega os dados
df = carregar_dados()

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Gloss√°rio da Qu√≠mica dos Res√≠duos",
    page_icon="‚ôªÔ∏è",
    layout="wide"
)

# Cabe√ßalho
st.title("‚ôªÔ∏è Gloss√°rio Interativo - Qu√≠mica dos Res√≠duos")
st.markdown("""
Este gloss√°rio interativo visa apoiar **educadores ambientais** no ensino sobre **res√≠duos s√≥lidos**, 
suas **caracter√≠sticas qu√≠micas**, **classifica√ß√£o segundo a ABNT**, e formas adequadas de destina√ß√£o e reaproveitamento.
""")

# Filtros na barra lateral
st.sidebar.header("Filtros")
categorias_selecionadas = st.sidebar.multiselect(
    "Selecione as categorias:",
    options=df['Categoria'].unique(),
    default=df['Categoria'].unique()
)

classes_selecionadas = st.sidebar.multiselect(
    "Selecione as classes ABNT:",
    options=df['Classe ABNT'].unique(),
    default=df['Classe ABNT'].unique()
)

opcoes_reciclavel = ['Todos'] + list(df['Recicl√°vel'].unique())
reciclavel_selecionado = st.sidebar.selectbox(
    "Recicl√°vel:",
    options=opcoes_reciclavel,
    index=0
)

# Filtra os dados
dados_filtrados = df[
    (df['Categoria'].isin(categorias_selecionadas)) &
    (df['Classe ABNT'].isin(classes_selecionadas))
]

if reciclavel_selecionado != 'Todos':
    dados_filtrados = dados_filtrados[dados_filtrados['Recicl√°vel'] == reciclavel_selecionado]

# Conte√∫do principal
if not dados_filtrados.empty:
    # Exibe os dados filtrados
    st.subheader("Dados Filtrados")
    st.dataframe(
        dados_filtrados,
        use_container_width=True,
        height=600,
        hide_index=True,
        column_config={
            "Composi√ß√£o Qu√≠mica": st.column_config.TextColumn(width="large"),
            "Aplica√ß√µes ou Exemplos": st.column_config.TextColumn(width="large")
        }
    )
    
    # Visualiza√ß√£o detalhada
    with st.expander("üîç Visualiza√ß√£o Detalhada por Item"):
        material_selecionado = st.selectbox(
            "Selecione um material para detalhes:",
            options=dados_filtrados['Sigla ou Nome'].unique()
        )
        
        dados_material = dados_filtrados[dados_filtrados['Sigla ou Nome'] == material_selecionado].iloc[0]
        
        col1, col2 = st.columns(2)
        with col1:
            st.markdown(f"**Categoria:** {dados_material['Categoria']}")
            st.markdown(f"**Nome/Sigla:** {dados_material['Sigla ou Nome']}")
            st.markdown(f"**Composi√ß√£o Qu√≠mica:** {dados_material['Composi√ß√£o Qu√≠mica']}")
        
        with col2:
            st.markdown(f"**Classe ABNT:** {dados_material['Classe ABNT']}")
            st.markdown(f"**Recicl√°vel:** {dados_material['Recicl√°vel']}")
            st.markdown(f"**Destina√ß√£o:** {dados_material['Destina√ß√£o']}")
        
        st.markdown("**Aplica√ß√µes/Exemplos:**")
        st.info(dados_material['Aplica√ß√µes ou Exemplos'])
else:
    st.warning("Nenhum resultado encontrado com os filtros selecionados.")

# Informa√ß√µes adicionais
st.divider()
with st.expander("üìö Sobre a Classifica√ß√£o ABNT NBR 10.004"):
    st.markdown("""
    - **Classe I - Perigosos**: Apresentam riscos √† sa√∫de p√∫blica ou ao meio ambiente (inflam√°veis, t√≥xicos, corrosivos).
    - **Classe II A - N√£o inertes**: Res√≠duos que podem sofrer decomposi√ß√£o (org√¢nicos, biodegrad√°veis).
    - **Classe II B - Inertes**: Res√≠duos que n√£o se degradam facilmente (vidro, alguns pl√°sticos e metais).
    """)

# Rodap√©
st.caption("Desenvolvido para educa√ß√£o ambiental - Dados conforme ABNT NBR 10.004")
