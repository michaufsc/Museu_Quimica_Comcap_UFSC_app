import streamlit as st

# ‚úÖ Deve ser o primeiro comando Streamlit
st.set_page_config(
    page_title="Gloss√°rio de Pol√≠meros",
    page_icon="üß™",
    layout="wide"
)

import pandas as pd

# ‚úÖ Carregar os dados do CSV
@st.cache_data
def carregar_dados():
    return pd.read_csv("polimeros.csv")

df = carregar_dados()

# ‚úÖ T√≠tulo e introdu√ß√£o
st.title("üß™ Gloss√°rio Interativo ‚Äì Pol√≠meros e Reciclagem")
st.markdown("""
Este gloss√°rio interativo apresenta os principais **pol√≠meros utilizados na sociedade**, 
com informa√ß√µes sobre **composi√ß√£o qu√≠mica, origem, tipo de polimeriza√ß√£o, reciclabilidade e aplica√ß√µes**.  
Ideal para educadores ambientais, estudantes e espa√ßos de divulga√ß√£o cient√≠fica.
""")

# üîç Campo de busca
busca = st.text_input("üîç Buscar por nome, sigla, mon√¥mero, aplica√ß√£o:")

# üîß Filtros interativos
col1, col2, col3 = st.columns(3)

with col1:
    tipos_pol = st.multiselect("Tipo de Polimeriza√ß√£o", df["Tipo de Polimeriza√ß√£o"].unique(), default=df["Tipo de Polimeriza√ß√£o"].unique())

with col2:
    origem = st.multiselect("Origem", df["Aquisi√ß√£o"].unique(), default=df["Aquisi√ß√£o"].unique())

with col3:
    reciclavel = st.selectbox("Recicl√°vel", options=["Todos"] + list(df["Recicl√°vel"].unique()), index=0)

# üìå Aplicar filtros
df_filtrado = df[
    (df["Tipo de Polimeriza√ß√£o"].isin(tipos_pol)) &
    (df["Aquisi√ß√£o"].isin(origem))
]

if reciclavel != "Todos":
    df_filtrado = df_filtrado[df_filtrado["Recicl√°vel"] == reciclavel]

if busca:
    df_filtrado = df_filtrado[df_filtrado.apply(
        lambda row: busca.lower() in str(row).lower(), axis=1
    )]

# üìã Exibir tabela
if not df_filtrado.empty:
    st.subheader("üìò Resultados filtrados")
    st.dataframe(df_filtrado, use_container_width=True, hide_index=True)

    with st.expander("üîç Visualiza√ß√£o detalhada por pol√≠mero"):
        item = st.selectbox("Selecione um pol√≠mero:", df_filtrado["Nome"])
        dados = df_filtrado[df_filtrado["Nome"] == item].iloc[0]

        col1, col2 = st.columns(2)
        with col1:
            st.markdown(f"**Sigla:** {dados['Sigla']}")
            st.markdown(f"**Tipo de Polimeriza√ß√£o:** {dados['Tipo de Polimeriza√ß√£o']}")
            st.markdown(f"**Tipo de Cadeia:** {dados['Tipo de Cadeia']}")
            st.markdown(f"**Mon√¥mero(s):** {dados['Mon√¥mero(s)']}")

        with col2:
            st.markdown(f"**Composi√ß√£o Qu√≠mica:** {dados['Composi√ß√£o Qu√≠mica']}")
            st.markdown(f"**Origem:** {dados['Aquisi√ß√£o']}")
            st.markdown(f"**Recicl√°vel:** {dados['Recicl√°vel']}")

        st.markdown(f"**Aplica√ß√µes Comuns:**")
        st.info(dados["Aplica√ß√µes Comuns"])
else:
    st.warning("Nenhum resultado encontrado com os filtros ou busca aplicada.")

# Rodap√©
st.markdown("---")
st.caption("Desenvolvido a partir de conte√∫do do curso QMC5530 ‚Äì UFSC | Apoio √† Educa√ß√£o Ambiental")

